{"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_eslint_plugin_ava */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/lib.npmtest_eslint_plugin_ava.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/lib.npmtest_eslint_plugin_ava.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":62}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":68}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_eslint_plugin_ava */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_eslint_plugin_ava = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_eslint_plugin_ava = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":61}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":75},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-eslint-plugin-ava && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_eslint_plugin_ava */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_eslint_plugin_ava","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_eslint_plugin_ava.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_eslint_plugin_ava.rollup.js'] =","            local.assetsDict['/assets.npmtest_eslint_plugin_ava.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_eslint_plugin_ava.__dirname +","                    '/lib.npmtest_eslint_plugin_ava.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":43,"column":2}}},"branchMap":{},"code":["'use strict';","const reqAll = require('req-all');","","module.exports = {","\trules: reqAll('rules', {camelize: false}),","\tconfigs: {","\t\trecommended: {","\t\t\tenv: {","\t\t\t\tes6: true","\t\t\t},","\t\t\tparserOptions: {","\t\t\t\tecmaVersion: 2017,","\t\t\t\tsourceType: 'module'","\t\t\t},","\t\t\trules: {","\t\t\t\t'ava/assertion-arguments': 'error',","\t\t\t\t'ava/max-asserts': ['off', 5],","\t\t\t\t'ava/no-async-fn-without-await': 'error',","\t\t\t\t'ava/no-cb-test': 'off',","\t\t\t\t'ava/no-duplicate-modifiers': 'error',","\t\t\t\t'ava/no-identical-title': 'error',","\t\t\t\t'ava/no-ignored-test-files': 'error',","\t\t\t\t'ava/no-invalid-end': 'error',","\t\t\t\t'ava/no-nested-tests': 'error',","\t\t\t\t'ava/no-only-test': 'error',","\t\t\t\t'ava/no-skip-assert': 'error',","\t\t\t\t'ava/no-skip-test': 'error',","\t\t\t\t'ava/no-statement-after-end': 'error',","\t\t\t\t'ava/no-todo-implementation': 'error',","\t\t\t\t'ava/no-todo-test': 'warn',","\t\t\t\t'ava/no-unknown-modifiers': 'error',","\t\t\t\t'ava/prefer-async-await': 'error',","\t\t\t\t'ava/prefer-power-assert': 'off',","\t\t\t\t'ava/test-ended': 'error',","\t\t\t\t'ava/test-title': ['error', 'if-multiple'],","\t\t\t\t'ava/use-t-well': 'error',","\t\t\t\t'ava/use-t': 'error',","\t\t\t\t'ava/use-test': 'error',","\t\t\t\t'ava/use-true-false': 'error'","\t\t\t}","\t\t}","\t}","};",""],"l":{"2":1,"4":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/assertion-arguments.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/assertion-arguments.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"report","line":83,"loc":{"start":{"line":83,"column":1},"end":{"line":83,"column":32}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":75,"column":2}},"5":{"start":{"line":77,"column":0},"end":{"line":135,"column":2}},"6":{"start":{"line":78,"column":1},"end":{"line":78,"column":29}},"7":{"start":{"line":79,"column":1},"end":{"line":79,"column":42}},"8":{"start":{"line":80,"column":1},"end":{"line":80,"column":50}},"9":{"start":{"line":81,"column":1},"end":{"line":81,"column":55}},"10":{"start":{"line":83,"column":1},"end":{"line":85,"column":2}},"11":{"start":{"line":84,"column":2},"end":{"line":84,"column":34}},"12":{"start":{"line":87,"column":1},"end":{"line":134,"column":4}},"13":{"start":{"line":92,"column":3},"end":{"line":92,"column":30}},"14":{"start":{"line":94,"column":3},"end":{"line":100,"column":4}},"15":{"start":{"line":99,"column":4},"end":{"line":99,"column":11}},"16":{"start":{"line":102,"column":3},"end":{"line":102,"column":44}},"17":{"start":{"line":103,"column":3},"end":{"line":104,"column":37}},"18":{"start":{"line":104,"column":20},"end":{"line":104,"column":35}},"19":{"start":{"line":106,"column":3},"end":{"line":112,"column":4}},"20":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"21":{"start":{"line":108,"column":5},"end":{"line":108,"column":61}},"22":{"start":{"line":111,"column":4},"end":{"line":111,"column":11}},"23":{"start":{"line":114,"column":3},"end":{"line":114,"column":49}},"24":{"start":{"line":116,"column":3},"end":{"line":118,"column":4}},"25":{"start":{"line":117,"column":4},"end":{"line":117,"column":11}},"26":{"start":{"line":120,"column":3},"end":{"line":132,"column":4}},"27":{"start":{"line":121,"column":4},"end":{"line":121,"column":74}},"28":{"start":{"line":122,"column":10},"end":{"line":132,"column":4}},"29":{"start":{"line":123,"column":4},"end":{"line":123,"column":71}},"30":{"start":{"line":124,"column":10},"end":{"line":132,"column":4}},"31":{"start":{"line":125,"column":4},"end":{"line":125,"column":48}},"32":{"start":{"line":127,"column":4},"end":{"line":131,"column":5}},"33":{"start":{"line":128,"column":5},"end":{"line":128,"column":68}},"34":{"start":{"line":129,"column":11},"end":{"line":131,"column":5}},"35":{"start":{"line":130,"column":5},"end":{"line":130,"column":67}},"36":{"start":{"line":137,"column":0},"end":{"line":147,"column":3}},"37":{"start":{"line":149,"column":0},"end":{"line":154,"column":2}}},"branchMap":{"1":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":17},"end":{"line":79,"column":35}},{"start":{"line":79,"column":39},"end":{"line":79,"column":41}}]},"2":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":3},"end":{"line":94,"column":3}},{"start":{"line":94,"column":3},"end":{"line":94,"column":3}}]},"3":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":7},"end":{"line":94,"column":41}},{"start":{"line":95,"column":4},"end":{"line":95,"column":20}},{"start":{"line":96,"column":4},"end":{"line":96,"column":41}},{"start":{"line":97,"column":4},"end":{"line":97,"column":28}}]},"4":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":3},"end":{"line":106,"column":3}},{"start":{"line":106,"column":3},"end":{"line":106,"column":3}}]},"5":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"6":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":3},"end":{"line":116,"column":3}},{"start":{"line":116,"column":3},"end":{"line":116,"column":3}}]},"7":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":3},"end":{"line":120,"column":3}},{"start":{"line":120,"column":3},"end":{"line":120,"column":3}}]},"8":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":10},"end":{"line":122,"column":10}},{"start":{"line":122,"column":10},"end":{"line":122,"column":10}}]},"9":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":10},"end":{"line":124,"column":10}},{"start":{"line":124,"column":10},"end":{"line":124,"column":10}}]},"10":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":14},"end":{"line":124,"column":29}},{"start":{"line":124,"column":33},"end":{"line":124,"column":56}}]},"11":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"12":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":19}},{"start":{"line":127,"column":23},"end":{"line":127,"column":40}}]},"13":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":11},"end":{"line":129,"column":11}},{"start":{"line":129,"column":11},"end":{"line":129,"column":11}}]},"14":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":15},"end":{"line":129,"column":25}},{"start":{"line":129,"column":29},"end":{"line":129,"column":47}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","const expectedNbArguments = {","\tdeepEqual: {","\t\tmin: 2,","\t\tmax: 3","\t},","\tfail: {","\t\tmin: 0,","\t\tmax: 1","\t},","\tfalse: {","\t\tmin: 1,","\t\tmax: 2","\t},","\tfalsy: {","\t\tmin: 1,","\t\tmax: 2","\t},","\tifError: {","\t\tmin: 1,","\t\tmax: 2","\t},","\tis: {","\t\tmin: 2,","\t\tmax: 3","\t},","\tnot: {","\t\tmin: 2,","\t\tmax: 3","\t},","\tnotDeepEqual: {","\t\tmin: 2,","\t\tmax: 3","\t},","\tnotThrows: {","\t\tmin: 1,","\t\tmax: 2","\t},","\tpass: {","\t\tmin: 0,","\t\tmax: 1","\t},","\tplan: {","\t\tmin: 1,","\t\tmax: 1","\t},","\tregex: {","\t\tmin: 2,","\t\tmax: 3","\t},","\tnotRegex: {","\t\tmin: 2,","\t\tmax: 3","\t},","\tsnapshot: {","\t\tmin: 1,","\t\tmax: 2","\t},","\tthrows: {","\t\tmin: 1,","\t\tmax: 3","\t},","\ttrue: {","\t\tmin: 1,","\t\tmax: 2","\t},","\ttruthy: {","\t\tmin: 1,","\t\tmax: 2","\t}","};","","const create = context => {","\tconst ava = createAvaRule();","\tconst options = context.options[0] || {};","\tconst enforcesMessage = Boolean(options.message);","\tconst shouldHaveMessage = options.message !== 'never';","","\tfunction report(node, message) {","\t\tcontext.report({node, message});","\t}","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isInTestNode","\t\t])(node => {","\t\t\tconst callee = node.callee;","","\t\t\tif (callee.type !== 'MemberExpression' ||","\t\t\t\t!callee.property ||","\t\t\t\tutil.nameOfRootObject(callee) !== 't' ||","\t\t\t\tutil.isInContext(callee)","\t\t\t) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tconst gottenArgs = node.arguments.length;","\t\t\tconst members = util.getMembers(callee)","\t\t\t\t.filter(name => name !== 'skip');","","\t\t\tif (members[0] === 'end') {","\t\t\t\tif (gottenArgs > 1) {","\t\t\t\t\treport(node, `Too many arguments. Expected at most 1.`);","\t\t\t\t}","","\t\t\t\treturn;","\t\t\t}","","\t\t\tconst nArgs = expectedNbArguments[members[0]];","","\t\t\tif (!nArgs) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tif (gottenArgs < nArgs.min) {","\t\t\t\treport(node, `Not enough arguments. Expected at least ${nArgs.min}.`);","\t\t\t} else if (node.arguments.length > nArgs.max) {","\t\t\t\treport(node, `Too many arguments. Expected at most ${nArgs.max}.`);","\t\t\t} else if (enforcesMessage && nArgs.min !== nArgs.max) {","\t\t\t\tconst hasMessage = gottenArgs === nArgs.max;","","\t\t\t\tif (!hasMessage && shouldHaveMessage) {","\t\t\t\t\treport(node, 'Expected an assertion message, but found none.');","\t\t\t\t} else if (hasMessage && !shouldHaveMessage) {","\t\t\t\t\treport(node, 'Expected no assertion message, but found one.');","\t\t\t\t}","\t\t\t}","\t\t})","\t});","};","","const schema = [{","\ttype: 'object',","\tproperties: {","\t\tmessage: {","\t\t\tenum: [","\t\t\t\t'always',","\t\t\t\t'never'","\t\t\t]","\t\t}","\t}","}];","","module.exports = {","\tcreate,","\tmeta: {","\t\tschema","\t}","};",""],"l":{"2":1,"3":1,"4":1,"6":1,"77":1,"78":0,"79":0,"80":0,"81":0,"83":1,"84":0,"87":0,"92":0,"94":0,"99":0,"102":0,"103":0,"104":0,"106":0,"107":0,"108":0,"111":0,"114":0,"116":0,"117":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"127":0,"128":0,"129":0,"130":0,"137":1,"149":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/util.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/util.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getTestModifiers","line":44,"loc":{"start":{"line":44,"column":27},"end":{"line":44,"column":59}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":7,"column":2}},"3":{"start":{"line":9,"column":0},"end":{"line":15,"column":2}},"4":{"start":{"line":10,"column":1},"end":{"line":12,"column":2}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":47}},"6":{"start":{"line":14,"column":1},"end":{"line":14,"column":25}},"7":{"start":{"line":17,"column":0},"end":{"line":23,"column":2}},"8":{"start":{"line":18,"column":1},"end":{"line":20,"column":2}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":42}},"10":{"start":{"line":22,"column":1},"end":{"line":22,"column":41}},"11":{"start":{"line":25,"column":0},"end":{"line":38,"column":2}},"12":{"start":{"line":26,"column":1},"end":{"line":26,"column":26}},"13":{"start":{"line":28,"column":1},"end":{"line":30,"column":2}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":23}},"15":{"start":{"line":32,"column":1},"end":{"line":37,"column":2}},"16":{"start":{"line":33,"column":2},"end":{"line":33,"column":71}},"17":{"start":{"line":34,"column":2},"end":{"line":34,"column":65}},"18":{"start":{"line":36,"column":2},"end":{"line":36,"column":23}},"19":{"start":{"line":40,"column":0},"end":{"line":42,"column":2}},"20":{"start":{"line":41,"column":1},"end":{"line":41,"column":62}},"21":{"start":{"line":44,"column":0},"end":{"line":54,"column":2}},"22":{"start":{"line":45,"column":1},"end":{"line":47,"column":2}},"23":{"start":{"line":46,"column":2},"end":{"line":46,"column":39}},"24":{"start":{"line":49,"column":1},"end":{"line":51,"column":2}},"25":{"start":{"line":50,"column":2},"end":{"line":50,"column":66}},"26":{"start":{"line":53,"column":1},"end":{"line":53,"column":11}},"27":{"start":{"line":56,"column":0},"end":{"line":64,"column":2}},"28":{"start":{"line":57,"column":1},"end":{"line":57,"column":33}},"29":{"start":{"line":59,"column":1},"end":{"line":61,"column":2}},"30":{"start":{"line":60,"column":2},"end":{"line":60,"column":46}},"31":{"start":{"line":63,"column":1},"end":{"line":63,"column":15}},"32":{"start":{"line":66,"column":0},"end":{"line":66,"column":32}},"33":{"start":{"line":68,"column":0},"end":{"line":85,"column":3}},"34":{"start":{"line":87,"column":0},"end":{"line":87,"column":77}},"35":{"start":{"line":89,"column":0},"end":{"line":89,"column":68}},"36":{"start":{"line":90,"column":0},"end":{"line":90,"column":57}},"37":{"start":{"line":91,"column":0},"end":{"line":91,"column":81}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},{"start":{"line":10,"column":1},"end":{"line":10,"column":1}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},{"start":{"line":18,"column":1},"end":{"line":18,"column":1}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},{"start":{"line":28,"column":1},"end":{"line":28,"column":1}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":10},"end":{"line":34,"column":24}},{"start":{"line":34,"column":28},"end":{"line":34,"column":46}},{"start":{"line":34,"column":51},"end":{"line":34,"column":64}}]},"5":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":12}},{"start":{"line":41,"column":16},"end":{"line":41,"column":61}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},{"start":{"line":45,"column":1},"end":{"line":45,"column":1}}]},"7":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},{"start":{"line":49,"column":1},"end":{"line":49,"column":1}}]},"8":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},{"start":{"line":59,"column":1},"end":{"line":59,"column":1}}]}},"code":["'use strict';","const fs = require('fs');","","const functionExpressions = [","\t'FunctionExpression',","\t'ArrowFunctionExpression'","];","","exports.nameOfRootObject = node => {","\tif (node.object.type === 'MemberExpression') {","\t\treturn exports.nameOfRootObject(node.object);","\t}","","\treturn node.object.name;","};","","exports.isInContext = node => {","\tif (node.object.type === 'MemberExpression') {","\t\treturn exports.isInContext(node.object);","\t}","","\treturn node.property.name === 'context';","};","","exports.getAvaConfig = filepath => {","\tconst defaultResult = {};","","\tif (!filepath) {","\t\treturn defaultResult;","\t}","","\ttry {","\t\tconst packageContent = JSON.parse(fs.readFileSync(filepath, 'utf8'));","\t\treturn (packageContent && packageContent.ava) || defaultResult;","\t} catch (err) {","\t\treturn defaultResult;","\t}","};","","exports.isFunctionExpression = node => {","\treturn node && functionExpressions.indexOf(node.type) !== -1;","};","","exports.getTestModifiers = function getTestModifiers(node) {","\tif (node.type === 'CallExpression') {","\t\treturn getTestModifiers(node.callee);","\t}","","\tif (node.type === 'MemberExpression') {","\t\treturn getTestModifiers(node.object).concat(node.property.name);","\t}","","\treturn [];","};","","const getMembers = node => {","\tconst name = node.property.name;","","\tif (node.object.type === 'MemberExpression') {","\t\treturn getMembers(node.object).concat(name);","\t}","","\treturn [name];","};","","exports.getMembers = getMembers;","","const assertionMethodsNumArguments = new Map([","\t['deepEqual', 2],","\t['fail', 0],","\t['false', 1],","\t['falsy', 1],","\t['ifError', 1],","\t['is', 2],","\t['not', 2],","\t['notDeepEqual', 2],","\t['notThrows', 1],","\t['pass', 0],","\t['regex', 2],","\t['notRegex', 2],","\t['snapshot', 1],","\t['throws', 1],","\t['true', 1],","\t['truthy', 1]","]);","","const assertionMethodNames = Array.from(assertionMethodsNumArguments.keys());","","exports.assertionMethodsNumArguments = assertionMethodsNumArguments;","exports.assertionMethods = new Set(assertionMethodNames);","exports.executionMethods = new Set(assertionMethodNames.concat(['end', 'plan']));",""],"l":{"2":1,"4":1,"9":1,"10":0,"11":0,"14":0,"17":1,"18":0,"19":0,"22":0,"25":1,"26":0,"28":0,"29":0,"32":0,"33":0,"34":0,"36":0,"40":1,"41":0,"44":1,"45":0,"46":0,"49":0,"50":0,"53":0,"56":1,"57":0,"59":0,"60":0,"63":0,"66":1,"68":1,"87":1,"89":1,"90":1,"91":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/create-ava-rule.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/create-ava-rule.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"isTestFunctionCall","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":34}}},"2":{"name":"hasTestModifier","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":53}},"4":{"start":{"line":6,"column":0},"end":{"line":21,"column":2}},"5":{"start":{"line":23,"column":0},"end":{"line":42,"column":2}},"6":{"start":{"line":44,"column":0},"end":{"line":52,"column":1}},"7":{"start":{"line":45,"column":1},"end":{"line":49,"column":2}},"8":{"start":{"line":46,"column":2},"end":{"line":46,"column":30}},"9":{"start":{"line":47,"column":8},"end":{"line":49,"column":2}},"10":{"start":{"line":48,"column":2},"end":{"line":48,"column":41}},"11":{"start":{"line":51,"column":1},"end":{"line":51,"column":14}},"12":{"start":{"line":54,"column":0},"end":{"line":66,"column":1}},"13":{"start":{"line":55,"column":1},"end":{"line":63,"column":2}},"14":{"start":{"line":56,"column":2},"end":{"line":56,"column":43}},"15":{"start":{"line":57,"column":8},"end":{"line":63,"column":2}},"16":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"17":{"start":{"line":59,"column":3},"end":{"line":59,"column":15}},"18":{"start":{"line":62,"column":2},"end":{"line":62,"column":43}},"19":{"start":{"line":65,"column":1},"end":{"line":65,"column":14}},"20":{"start":{"line":68,"column":0},"end":{"line":114,"column":2}},"21":{"start":{"line":69,"column":1},"end":{"line":69,"column":24}},"22":{"start":{"line":70,"column":1},"end":{"line":70,"column":28}},"23":{"start":{"line":73,"column":1},"end":{"line":99,"column":3}},"24":{"start":{"line":75,"column":3},"end":{"line":77,"column":4}},"25":{"start":{"line":76,"column":4},"end":{"line":76,"column":22}},"26":{"start":{"line":80,"column":3},"end":{"line":82,"column":4}},"27":{"start":{"line":81,"column":4},"end":{"line":81,"column":22}},"28":{"start":{"line":85,"column":3},"end":{"line":88,"column":4}},"29":{"start":{"line":87,"column":4},"end":{"line":87,"column":27}},"30":{"start":{"line":91,"column":3},"end":{"line":94,"column":4}},"31":{"start":{"line":93,"column":4},"end":{"line":93,"column":27}},"32":{"start":{"line":97,"column":3},"end":{"line":97,"column":22}},"33":{"start":{"line":101,"column":1},"end":{"line":113,"column":3}},"34":{"start":{"line":102,"column":26},"end":{"line":102,"column":63}},"35":{"start":{"line":103,"column":27},"end":{"line":106,"column":50}},"36":{"start":{"line":107,"column":22},"end":{"line":107,"column":32}},"37":{"start":{"line":108,"column":22},"end":{"line":108,"column":37}},"38":{"start":{"line":109,"column":22},"end":{"line":109,"column":46}},"39":{"start":{"line":111,"column":3},"end":{"line":111,"column":67}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},{"start":{"line":45,"column":1},"end":{"line":45,"column":1}}]},"2":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":1},"end":{"line":55,"column":1}},{"start":{"line":55,"column":1},"end":{"line":55,"column":1}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"6":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":41}},{"start":{"line":58,"column":45},"end":{"line":58,"column":71}}]},"7":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":3},"end":{"line":75,"column":3}},{"start":{"line":75,"column":3},"end":{"line":75,"column":3}}]},"8":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":7},"end":{"line":75,"column":18}},{"start":{"line":75,"column":22},"end":{"line":75,"column":78}}]},"9":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":3},"end":{"line":80,"column":3}},{"start":{"line":80,"column":3},"end":{"line":80,"column":3}}]},"10":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":7},"end":{"line":80,"column":18}},{"start":{"line":80,"column":22},"end":{"line":80,"column":79}}]},"11":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":3},"end":{"line":85,"column":3}},{"start":{"line":85,"column":3},"end":{"line":85,"column":3}}]},"12":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":3},"end":{"line":91,"column":3}},{"start":{"line":91,"column":3},"end":{"line":91,"column":3}}]},"13":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":27},"end":{"line":103,"column":70}},{"start":{"line":104,"column":4},"end":{"line":104,"column":51}},{"start":{"line":105,"column":4},"end":{"line":105,"column":46}},{"start":{"line":106,"column":4},"end":{"line":106,"column":50}}]}},"code":["'use strict';","const espurify = require('espurify');","const enhance = require('enhance-visitors');","const deepStrictEqual = require('deep-strict-equal');","","const avaImportDeclarationAst = {","\ttype: 'ImportDeclaration',","\tspecifiers: [","\t\t{","\t\t\ttype: 'ImportDefaultSpecifier',","\t\t\tlocal: {","\t\t\t\ttype: 'Identifier',","\t\t\t\tname: 'test'","\t\t\t}","\t\t}","\t],","\tsource: {","\t\ttype: 'Literal',","\t\tvalue: 'ava'","\t}","};","","const avaVariableDeclaratorAst = {","\ttype: 'VariableDeclarator',","\tid: {","\t\ttype: 'Identifier',","\t\tname: 'test'","\t},","\tinit: {","\t\ttype: 'CallExpression',","\t\tcallee: {","\t\t\ttype: 'Identifier',","\t\t\tname: 'require'","\t\t},","\t\targuments: [","\t\t\t{","\t\t\t\ttype: 'Literal',","\t\t\t\tvalue: 'ava'","\t\t\t}","\t\t]","\t}","};","","function isTestFunctionCall(node) {","\tif (node.type === 'Identifier') {","\t\treturn node.name === 'test';","\t} else if (node.type === 'MemberExpression') {","\t\treturn isTestFunctionCall(node.object);","\t}","","\treturn false;","}","","function hasTestModifier(node, mod) {","\tif (node.type === 'CallExpression') {","\t\treturn hasTestModifier(node.callee, mod);","\t} else if (node.type === 'MemberExpression') {","\t\tif (node.property.type === 'Identifier' && node.property.name === mod) {","\t\t\treturn true;","\t\t}","","\t\treturn hasTestModifier(node.object, mod);","\t}","","\treturn false;","}","","module.exports = () => {","\tlet isTestFile = false;","\tlet currentTestNode = null;","","\t/* eslint quote-props: [2, \"as-needed\"] */","\tconst predefinedRules = {","\t\tImportDeclaration: node => {","\t\t\tif (!isTestFile && deepStrictEqual(espurify(node), avaImportDeclarationAst)) {","\t\t\t\tisTestFile = true;","\t\t\t}","\t\t},","\t\tVariableDeclarator: node => {","\t\t\tif (!isTestFile && deepStrictEqual(espurify(node), avaVariableDeclaratorAst)) {","\t\t\t\tisTestFile = true;","\t\t\t}","\t\t},","\t\tCallExpression: node => {","\t\t\tif (isTestFunctionCall(node.callee)) {","\t\t\t\t// entering test function","\t\t\t\tcurrentTestNode = node;","\t\t\t}","\t\t},","\t\t'CallExpression:exit': node => {","\t\t\tif (currentTestNode === node) {","\t\t\t\t// leaving test function","\t\t\t\tcurrentTestNode = null;","\t\t\t}","\t\t},","\t\t'Program:exit': () => {","\t\t\tisTestFile = false;","\t\t}","\t};","","\treturn {","\t\thasTestModifier: mod => hasTestModifier(currentTestNode, mod),","\t\thasNoHookModifier: () => !hasTestModifier(currentTestNode, 'before') &&","\t\t\t\t!hasTestModifier(currentTestNode, 'beforeEach') &&","\t\t\t\t!hasTestModifier(currentTestNode, 'after') &&","\t\t\t\t!hasTestModifier(currentTestNode, 'afterEach'),","\t\tisInTestFile: () => isTestFile,","\t\tisInTestNode: () => currentTestNode,","\t\tisTestNode: node => currentTestNode === node,","\t\tmerge: customHandlers => {","\t\t\treturn enhance.mergeVisitors([predefinedRules, customHandlers]);","\t\t}","\t};","};",""],"l":{"2":1,"3":1,"4":1,"6":1,"23":1,"44":1,"45":0,"46":0,"47":0,"48":0,"51":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"62":0,"65":0,"68":1,"69":0,"70":0,"73":0,"75":0,"76":0,"80":0,"81":0,"85":0,"87":0,"91":0,"93":0,"97":0,"101":0,"102":0,"103":0,"107":0,"108":0,"109":0,"111":0}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/assertion-message.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/assertion-message.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"nbArguments","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":18,"column":1}},"5":{"start":{"line":7,"column":1},"end":{"line":7,"column":73}},"6":{"start":{"line":9,"column":1},"end":{"line":11,"column":2}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":15}},"8":{"start":{"line":13,"column":1},"end":{"line":15,"column":2}},"9":{"start":{"line":14,"column":2},"end":{"line":14,"column":34}},"10":{"start":{"line":17,"column":1},"end":{"line":17,"column":11}},"11":{"start":{"line":20,"column":0},"end":{"line":58,"column":2}},"12":{"start":{"line":21,"column":1},"end":{"line":21,"column":29}},"13":{"start":{"line":22,"column":1},"end":{"line":22,"column":58}},"14":{"start":{"line":24,"column":1},"end":{"line":57,"column":4}},"15":{"start":{"line":29,"column":3},"end":{"line":29,"column":30}},"16":{"start":{"line":31,"column":3},"end":{"line":33,"column":4}},"17":{"start":{"line":32,"column":4},"end":{"line":32,"column":11}},"18":{"start":{"line":35,"column":3},"end":{"line":55,"column":4}},"19":{"start":{"line":36,"column":4},"end":{"line":36,"column":38}},"20":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"21":{"start":{"line":39,"column":5},"end":{"line":39,"column":12}},"22":{"start":{"line":42,"column":4},"end":{"line":42,"column":53}},"23":{"start":{"line":44,"column":4},"end":{"line":54,"column":5}},"24":{"start":{"line":45,"column":5},"end":{"line":48,"column":8}},"25":{"start":{"line":49,"column":11},"end":{"line":54,"column":5}},"26":{"start":{"line":50,"column":5},"end":{"line":53,"column":8}},"27":{"start":{"line":60,"column":0},"end":{"line":65,"column":3}},"28":{"start":{"line":67,"column":0},"end":{"line":73,"column":2}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},{"start":{"line":9,"column":1},"end":{"line":9,"column":1}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},{"start":{"line":13,"column":1},"end":{"line":13,"column":1}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":3},"end":{"line":31,"column":3}},{"start":{"line":31,"column":3},"end":{"line":31,"column":3}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":3},"end":{"line":35,"column":3}},{"start":{"line":35,"column":3},"end":{"line":35,"column":3}}]},"5":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":7},"end":{"line":35,"column":22}},{"start":{"line":35,"column":26},"end":{"line":35,"column":63}}]},"6":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"8":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":19}},{"start":{"line":44,"column":23},"end":{"line":44,"column":40}}]},"9":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":11},"end":{"line":49,"column":11}},{"start":{"line":49,"column":11},"end":{"line":49,"column":11}}]},"10":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":15},"end":{"line":49,"column":25}},{"start":{"line":49,"column":29},"end":{"line":49,"column":47}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","function nbArguments(node) {","\tconst nArgs = util.assertionMethodsNumArguments.get(node.property.name);","","\tif (nArgs !== undefined) {","\t\treturn nArgs;","\t}","","\tif (node.object.type === 'MemberExpression') {","\t\treturn nbArguments(node.object);","\t}","","\treturn -1;","}","","const create = context => {","\tconst ava = createAvaRule();","\tconst shouldHaveMessage = context.options[0] !== 'never';","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isInTestNode","\t\t])(node => {","\t\t\tconst callee = node.callee;","","\t\t\tif (callee.type !== 'MemberExpression') {","\t\t\t\treturn;","\t\t\t}","","\t\t\tif (callee.property && util.nameOfRootObject(callee) === 't') {","\t\t\t\tconst nArgs = nbArguments(callee);","","\t\t\t\tif (nArgs === -1) {","\t\t\t\t\treturn;","\t\t\t\t}","","\t\t\t\tconst hasMessage = nArgs < node.arguments.length;","","\t\t\t\tif (!hasMessage && shouldHaveMessage) {","\t\t\t\t\tcontext.report({","\t\t\t\t\t\tnode,","\t\t\t\t\t\tmessage: '(DEPRECATED) Expected an assertion message, but found none.'","\t\t\t\t\t});","\t\t\t\t} else if (hasMessage && !shouldHaveMessage) {","\t\t\t\t\tcontext.report({","\t\t\t\t\t\tnode,","\t\t\t\t\t\tmessage: '(DEPRECATED) Expected no assertion message, but found one.'","\t\t\t\t\t});","\t\t\t\t}","\t\t\t}","\t\t})","\t});","};","","const schema = [{","\tenum: [","\t\t'always',","\t\t'never'","\t]","}];","","module.exports = {","\tcreate,","\tmeta: {","\t\tschema,","\t\tdeprecated: true","\t}","};",""],"l":{"2":1,"3":1,"4":1,"6":1,"7":0,"9":0,"10":0,"13":0,"14":0,"17":0,"20":1,"21":0,"22":0,"24":0,"29":0,"31":0,"32":0,"35":0,"36":0,"38":0,"39":0,"42":0,"44":0,"45":0,"49":0,"50":0,"60":1,"67":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/max-asserts.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/max-asserts.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"5":{"start":{"line":8,"column":0},"end":{"line":55,"column":2}},"6":{"start":{"line":9,"column":1},"end":{"line":9,"column":29}},"7":{"start":{"line":10,"column":1},"end":{"line":10,"column":47}},"8":{"start":{"line":11,"column":1},"end":{"line":11,"column":24}},"9":{"start":{"line":12,"column":1},"end":{"line":12,"column":25}},"10":{"start":{"line":14,"column":1},"end":{"line":54,"column":4}},"11":{"start":{"line":19,"column":3},"end":{"line":19,"column":30}},"12":{"start":{"line":21,"column":3},"end":{"line":23,"column":4}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":11}},"14":{"start":{"line":25,"column":3},"end":{"line":40,"column":4}},"15":{"start":{"line":28,"column":4},"end":{"line":29,"column":38}},"16":{"start":{"line":29,"column":21},"end":{"line":29,"column":36}},"17":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"18":{"start":{"line":32,"column":5},"end":{"line":32,"column":12}},"19":{"start":{"line":35,"column":4},"end":{"line":35,"column":21}},"20":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"21":{"start":{"line":38,"column":5},"end":{"line":38,"column":25}},"22":{"start":{"line":44,"column":3},"end":{"line":49,"column":4}},"23":{"start":{"line":45,"column":4},"end":{"line":48,"column":7}},"24":{"start":{"line":51,"column":3},"end":{"line":51,"column":22}},"25":{"start":{"line":52,"column":3},"end":{"line":52,"column":23}},"26":{"start":{"line":57,"column":0},"end":{"line":59,"column":3}},"27":{"start":{"line":61,"column":0},"end":{"line":66,"column":2}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":23},"end":{"line":10,"column":41}},{"start":{"line":10,"column":45},"end":{"line":10,"column":46}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":3},"end":{"line":21,"column":3}},{"start":{"line":21,"column":3},"end":{"line":21,"column":3}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":3},"end":{"line":25,"column":3}},{"start":{"line":25,"column":3},"end":{"line":25,"column":3}}]},"4":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":7},"end":{"line":25,"column":22}},{"start":{"line":26,"column":5},"end":{"line":26,"column":61}},{"start":{"line":27,"column":5},"end":{"line":27,"column":42}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":3},"end":{"line":44,"column":3}},{"start":{"line":44,"column":3},"end":{"line":44,"column":3}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","const notAssertionMethods = ['plan', 'end'];","","const create = context => {","\tconst ava = createAvaRule();","\tconst maxAssertions = context.options[0] || 5;","\tlet assertionCount = 0;","\tlet nodeToReport = null;","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isInTestNode","\t\t])(node => {","\t\t\tconst callee = node.callee;","","\t\t\tif (callee.type !== 'MemberExpression') {","\t\t\t\treturn;","\t\t\t}","","\t\t\tif (callee.property &&","\t\t\t\t\tnotAssertionMethods.indexOf(callee.property.name) === -1 &&","\t\t\t\t\tutil.nameOfRootObject(callee) === 't') {","\t\t\t\tconst members = util.getMembers(callee)","\t\t\t\t\t.filter(name => name !== 'skip');","","\t\t\t\tif (!util.assertionMethods.has(members[0])) {","\t\t\t\t\treturn;","\t\t\t\t}","","\t\t\t\tassertionCount++;","","\t\t\t\tif (assertionCount === maxAssertions + 1) {","\t\t\t\t\tnodeToReport = node;","\t\t\t\t}","\t\t\t}","\t\t}),","\t\t'CallExpression:exit': visitIf([ava.isTestNode])(() => {","\t\t\t// leaving test function","\t\t\tif (assertionCount > maxAssertions) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode: nodeToReport,","\t\t\t\t\tmessage: `Expected at most ${maxAssertions} assertions, but found ${assertionCount}.`","\t\t\t\t});","\t\t\t}","","\t\t\tassertionCount = 0;","\t\t\tnodeToReport = null;","\t\t})","\t});","};","","const schema = [{","\ttype: 'integer'","}];","","module.exports = {","\tcreate,","\tmeta: {","\t\tschema","\t}","};",""],"l":{"2":1,"3":1,"4":1,"6":1,"8":1,"9":0,"10":0,"11":0,"12":0,"14":0,"19":0,"21":0,"22":0,"25":0,"28":0,"29":0,"31":0,"32":0,"35":0,"37":0,"38":0,"44":0,"45":0,"51":0,"52":0,"57":1,"61":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-async-fn-without-await.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-async-fn-without-await.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":41,"column":2}},"4":{"start":{"line":6,"column":1},"end":{"line":6,"column":29}},"5":{"start":{"line":7,"column":1},"end":{"line":7,"column":25}},"6":{"start":{"line":8,"column":1},"end":{"line":8,"column":22}},"7":{"start":{"line":10,"column":1},"end":{"line":14,"column":3}},"8":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"9":{"start":{"line":12,"column":3},"end":{"line":12,"column":19}},"10":{"start":{"line":16,"column":1},"end":{"line":16,"column":53}},"11":{"start":{"line":16,"column":25},"end":{"line":16,"column":52}},"12":{"start":{"line":18,"column":1},"end":{"line":40,"column":4}},"13":{"start":{"line":23,"column":3},"end":{"line":23,"column":74}},"14":{"start":{"line":31,"column":3},"end":{"line":36,"column":4}},"15":{"start":{"line":32,"column":4},"end":{"line":35,"column":7}},"16":{"start":{"line":37,"column":3},"end":{"line":37,"column":23}},"17":{"start":{"line":38,"column":3},"end":{"line":38,"column":20}},"18":{"start":{"line":43,"column":0},"end":{"line":46,"column":2}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":33},"end":{"line":16,"column":37}},{"start":{"line":16,"column":41},"end":{"line":16,"column":51}}]},"3":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":17},"end":{"line":23,"column":43}},{"start":{"line":23,"column":47},"end":{"line":23,"column":73}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":3},"end":{"line":31,"column":3}},{"start":{"line":31,"column":3},"end":{"line":31,"column":3}}]},"5":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":7},"end":{"line":31,"column":18}},{"start":{"line":31,"column":22},"end":{"line":31,"column":31}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","\tlet testIsAsync = false;","\tlet testUsed = false;","","\tconst registerUseOfAwait = () => {","\t\tif (testIsAsync) {","\t\t\ttestUsed = true;","\t\t}","\t};","","\tconst isAsync = node => Boolean(node && node.async);","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\ttestIsAsync = isAsync(node.arguments[0]) || isAsync(node.arguments[1]);","\t\t}),","\t\tAwaitExpression: registerUseOfAwait,","\t\tYieldExpression: registerUseOfAwait,","\t\t'CallExpression:exit': visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\tif (testIsAsync && !testUsed) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: 'Function was declared as `async` but doesn\\'t use `await`'","\t\t\t\t});","\t\t\t}","\t\t\ttestIsAsync = false;","\t\t\ttestUsed = false;","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"5":1,"6":0,"7":0,"8":0,"10":0,"11":0,"12":0,"16":0,"18":0,"23":0,"31":0,"32":0,"37":0,"38":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-cb-test.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-cb-test.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":21,"column":2}},"4":{"start":{"line":6,"column":1},"end":{"line":6,"column":29}},"5":{"start":{"line":8,"column":1},"end":{"line":20,"column":4}},"6":{"start":{"line":13,"column":3},"end":{"line":18,"column":4}},"7":{"start":{"line":14,"column":4},"end":{"line":17,"column":7}},"8":{"start":{"line":23,"column":0},"end":{"line":26,"column":2}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":3},"end":{"line":13,"column":3}},{"start":{"line":13,"column":3},"end":{"line":13,"column":3}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\tif (ava.hasTestModifier('cb')) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: '`test.cb()` should be not be used.'","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"5":1,"6":0,"8":0,"13":0,"14":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-duplicate-modifiers.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-duplicate-modifiers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":30,"column":2}},"5":{"start":{"line":7,"column":1},"end":{"line":7,"column":29}},"6":{"start":{"line":9,"column":1},"end":{"line":29,"column":4}},"7":{"start":{"line":14,"column":3},"end":{"line":14,"column":60}},"8":{"start":{"line":15,"column":3},"end":{"line":17,"column":4}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":11}},"10":{"start":{"line":19,"column":3},"end":{"line":27,"column":6}},"11":{"start":{"line":20,"column":4},"end":{"line":25,"column":5}},"12":{"start":{"line":21,"column":5},"end":{"line":24,"column":8}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":19}},"14":{"start":{"line":32,"column":0},"end":{"line":35,"column":2}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":3},"end":{"line":15,"column":3}},{"start":{"line":15,"column":3},"end":{"line":15,"column":3}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\tconst testModifiers = util.getTestModifiers(node).sort();","\t\t\tif (testModifiers.length === 0) {","\t\t\t\treturn;","\t\t\t}","","\t\t\ttestModifiers.reduce((prev, current) => {","\t\t\t\tif (prev === current) {","\t\t\t\t\tcontext.report({","\t\t\t\t\t\tnode,","\t\t\t\t\t\tmessage: `Duplicate test modifier \\`${current}\\`.`","\t\t\t\t\t});","\t\t\t\t}","\t\t\t\treturn current;","\t\t\t});","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"4":1,"6":1,"7":0,"9":0,"14":0,"15":0,"16":0,"19":0,"20":0,"21":0,"26":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-identical-title.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-identical-title.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1},"b":{"1":[0,0],"2":[0,0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isTitleUsed","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":48}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":53}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"7":{"start":{"line":8,"column":23},"end":{"line":8,"column":45}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":20}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":73}},"10":{"start":{"line":12,"column":40},"end":{"line":12,"column":72}},"11":{"start":{"line":14,"column":0},"end":{"line":16,"column":84}},"12":{"start":{"line":14,"column":19},"end":{"line":16,"column":83}},"13":{"start":{"line":18,"column":0},"end":{"line":21,"column":1}},"14":{"start":{"line":19,"column":1},"end":{"line":19,"column":40}},"15":{"start":{"line":20,"column":1},"end":{"line":20,"column":83}},"16":{"start":{"line":20,"column":41},"end":{"line":20,"column":81}},"17":{"start":{"line":23,"column":0},"end":{"line":60,"column":2}},"18":{"start":{"line":24,"column":1},"end":{"line":24,"column":29}},"19":{"start":{"line":25,"column":1},"end":{"line":25,"column":25}},"20":{"start":{"line":27,"column":1},"end":{"line":59,"column":4}},"21":{"start":{"line":33,"column":3},"end":{"line":33,"column":31}},"22":{"start":{"line":34,"column":3},"end":{"line":34,"column":90}},"23":{"start":{"line":37,"column":3},"end":{"line":39,"column":4}},"24":{"start":{"line":38,"column":4},"end":{"line":38,"column":11}},"25":{"start":{"line":42,"column":3},"end":{"line":44,"column":4}},"26":{"start":{"line":43,"column":4},"end":{"line":43,"column":11}},"27":{"start":{"line":46,"column":3},"end":{"line":52,"column":4}},"28":{"start":{"line":47,"column":4},"end":{"line":50,"column":7}},"29":{"start":{"line":51,"column":4},"end":{"line":51,"column":11}},"30":{"start":{"line":54,"column":3},"end":{"line":54,"column":42}},"31":{"start":{"line":57,"column":3},"end":{"line":57,"column":23}},"32":{"start":{"line":62,"column":0},"end":{"line":65,"column":2}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":23},"end":{"line":8,"column":27}},{"start":{"line":8,"column":31},"end":{"line":8,"column":45}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":19},"end":{"line":14,"column":42}},{"start":{"line":15,"column":3},"end":{"line":15,"column":34}},{"start":{"line":15,"column":38},"end":{"line":15,"column":67}},{"start":{"line":16,"column":3},"end":{"line":16,"column":35}},{"start":{"line":16,"column":39},"end":{"line":16,"column":58}},{"start":{"line":16,"column":62},"end":{"line":16,"column":82}}]},"3":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":70},"end":{"line":34,"column":77}},{"start":{"line":34,"column":80},"end":{"line":34,"column":89}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":21},"end":{"line":34,"column":36}},{"start":{"line":34,"column":40},"end":{"line":34,"column":67}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":3},"end":{"line":37,"column":3}},{"start":{"line":37,"column":3},"end":{"line":37,"column":3}}]},"6":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":7},"end":{"line":37,"column":30}},{"start":{"line":37,"column":34},"end":{"line":37,"column":54}}]},"7":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":3},"end":{"line":42,"column":3}},{"start":{"line":42,"column":3},"end":{"line":42,"column":3}}]},"8":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":7},"end":{"line":42,"column":22}},{"start":{"line":42,"column":26},"end":{"line":42,"column":61}}]},"9":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":3},"end":{"line":46,"column":3}},{"start":{"line":46,"column":3},"end":{"line":46,"column":3}}]}},"code":["'use strict';","const espurify = require('espurify');","const visitIf = require('enhance-visitors').visitIf;","const deepStrictEqual = require('deep-strict-equal');","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","const purify = node => node && espurify(node);","","let isStatic = null;","","const isStaticTemplateLiteral = node => node.expressions.every(isStatic);","","isStatic = node => node.type === 'Literal' ||","\t\t(node.type === 'TemplateLiteral' && isStaticTemplateLiteral(node)) ||","\t\t(node.type === 'BinaryExpression' && isStatic(node.left) && isStatic(node.right));","","function isTitleUsed(usedTitleNodes, titleNode) {","\tconst purifiedNode = purify(titleNode);","\treturn usedTitleNodes.some(usedTitle => deepStrictEqual(purifiedNode, usedTitle));","}","","const create = context => {","\tconst ava = createAvaRule();","\tlet usedTitleNodes = [];","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode,","\t\t\tava.hasNoHookModifier","\t\t])(node => {","\t\t\tconst args = node.arguments;","\t\t\tconst titleNode = args.length > 1 || ava.hasTestModifier('todo') ? args[0] : undefined;","","\t\t\t// don't flag computed titles or anonymous tests (anon tests covered in the if-multiple rule)","\t\t\tif (titleNode === undefined || !isStatic(titleNode)) {","\t\t\t\treturn;","\t\t\t}","","\t\t\t// Don't flag what look to be macros","\t\t\tif (args.length > 2 && !util.isFunctionExpression(args[1])) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tif (isTitleUsed(usedTitleNodes, titleNode)) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: 'Test title is used multiple times in the same file.'","\t\t\t\t});","\t\t\t\treturn;","\t\t\t}","","\t\t\tusedTitleNodes.push(purify(titleNode));","\t\t}),","\t\t'Program:exit': () => {","\t\t\tusedTitleNodes = [];","\t\t}","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"10":1,"12":1,"14":1,"18":1,"19":0,"20":0,"23":1,"24":0,"25":0,"27":0,"33":0,"34":0,"37":0,"38":0,"42":0,"43":0,"46":0,"47":0,"51":0,"54":0,"57":0,"62":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-ignored-test-files.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-ignored-test-files.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"isIgnored","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":45}}},"2":{"name":"getPackageInfo","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":26}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"8":{"start":{"line":10,"column":0},"end":{"line":16,"column":2}},"9":{"start":{"line":18,"column":0},"end":{"line":21,"column":2}},"10":{"start":{"line":23,"column":0},"end":{"line":35,"column":1}},"11":{"start":{"line":24,"column":1},"end":{"line":24,"column":59}},"12":{"start":{"line":26,"column":1},"end":{"line":28,"column":2}},"13":{"start":{"line":27,"column":2},"end":{"line":27,"column":83}},"14":{"start":{"line":30,"column":1},"end":{"line":32,"column":2}},"15":{"start":{"line":31,"column":2},"end":{"line":31,"column":77}},"16":{"start":{"line":34,"column":1},"end":{"line":34,"column":13}},"17":{"start":{"line":37,"column":0},"end":{"line":44,"column":1}},"18":{"start":{"line":38,"column":1},"end":{"line":38,"column":38}},"19":{"start":{"line":40,"column":1},"end":{"line":43,"column":3}},"20":{"start":{"line":46,"column":0},"end":{"line":88,"column":2}},"21":{"start":{"line":47,"column":1},"end":{"line":47,"column":40}},"22":{"start":{"line":49,"column":1},"end":{"line":51,"column":2}},"23":{"start":{"line":50,"column":2},"end":{"line":50,"column":12}},"24":{"start":{"line":53,"column":1},"end":{"line":53,"column":29}},"25":{"start":{"line":54,"column":1},"end":{"line":54,"column":38}},"26":{"start":{"line":55,"column":1},"end":{"line":55,"column":42}},"27":{"start":{"line":56,"column":1},"end":{"line":56,"column":74}},"28":{"start":{"line":57,"column":1},"end":{"line":57,"column":25}},"29":{"start":{"line":59,"column":1},"end":{"line":62,"column":2}},"30":{"start":{"line":61,"column":2},"end":{"line":61,"column":12}},"31":{"start":{"line":64,"column":1},"end":{"line":87,"column":4}},"32":{"start":{"line":69,"column":3},"end":{"line":69,"column":22}},"33":{"start":{"line":72,"column":3},"end":{"line":74,"column":4}},"34":{"start":{"line":73,"column":4},"end":{"line":73,"column":11}},"35":{"start":{"line":76,"column":3},"end":{"line":76,"column":73}},"36":{"start":{"line":78,"column":3},"end":{"line":83,"column":4}},"37":{"start":{"line":79,"column":4},"end":{"line":82,"column":7}},"38":{"start":{"line":85,"column":3},"end":{"line":85,"column":23}},"39":{"start":{"line":90,"column":0},"end":{"line":100,"column":3}},"40":{"start":{"line":102,"column":0},"end":{"line":107,"column":2}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":1},"end":{"line":26,"column":1}},{"start":{"line":26,"column":1},"end":{"line":26,"column":1}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},{"start":{"line":30,"column":1},"end":{"line":30,"column":1}}]},"3":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":26}},{"start":{"line":41,"column":30},"end":{"line":41,"column":59}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},{"start":{"line":49,"column":1},"end":{"line":49,"column":1}}]},"5":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":17},"end":{"line":55,"column":35}},{"start":{"line":55,"column":39},"end":{"line":55,"column":41}}]},"6":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":22},"end":{"line":56,"column":35}},{"start":{"line":56,"column":39},"end":{"line":56,"column":56}},{"start":{"line":56,"column":60},"end":{"line":56,"column":72}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},{"start":{"line":59,"column":1},"end":{"line":59,"column":1}}]},"8":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":3},"end":{"line":72,"column":3}},{"start":{"line":72,"column":3},"end":{"line":72,"column":3}}]},"9":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":3},"end":{"line":78,"column":3}},{"start":{"line":78,"column":3},"end":{"line":78,"column":3}}]}},"code":["'use strict';","const path = require('path');","const arrify = require('arrify');","const pkgUp = require('pkg-up');","const multimatch = require('multimatch');","const visitIf = require('enhance-visitors').visitIf;","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","const defaultFiles = [","\t'test.js',","\t'test-*.js',","\t'test/**/*.js',","\t'**/__tests__/**/*.js',","\t'**/*.test.js'","];","","const excludedFolders = [","\t'**/fixtures/**',","\t'**/helpers/**'","];","","function isIgnored(rootDir, files, filepath) {","\tconst relativeFilePath = path.relative(rootDir, filepath);","","\tif (multimatch([relativeFilePath], excludedFolders).length !== 0) {","\t\treturn `Test file is ignored because it is in \\`${excludedFolders.join(' ')}\\`.`;","\t}","","\tif (multimatch([relativeFilePath], files).length === 0) {","\t\treturn `Test file is ignored because it is not in \\`${files.join(' ')}\\`.`;","\t}","","\treturn null;","}","","function getPackageInfo() {","\tconst packageFilePath = pkgUp.sync();","","\treturn {","\t\trootDir: packageFilePath && path.dirname(packageFilePath),","\t\tfiles: util.getAvaConfig(packageFilePath).files","\t};","}","","const create = context => {","\tconst filename = context.getFilename();","","\tif (filename === '<text>') {","\t\treturn {};","\t}","","\tconst ava = createAvaRule();","\tconst packageInfo = getPackageInfo();","\tconst options = context.options[0] || {};","\tconst files = arrify(options.files || packageInfo.files || defaultFiles);","\tlet hasTestCall = false;","","\tif (!packageInfo.rootDir) {","\t\t// could not find a package.json folder","\t\treturn {};","\t}","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(() => {","\t\t\thasTestCall = true;","\t\t}),","\t\t'Program:exit': node => {","\t\t\tif (!hasTestCall) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tconst ignoredReason = isIgnored(packageInfo.rootDir, files, filename);","","\t\t\tif (ignoredReason) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: ignoredReason","\t\t\t\t});","\t\t\t}","","\t\t\thasTestCall = false;","\t\t}","\t});","};","","const schema = [{","\ttype: 'object',","\tproperties: {","\t\tfiles: {","\t\t\tanyOf: [","\t\t\t\t{type: 'array'},","\t\t\t\t{type: 'string'}","\t\t\t]","\t\t}","\t}","}];","","module.exports = {","\tcreate,","\tmeta: {","\t\tschema","\t}","};",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"18":1,"23":1,"24":0,"26":0,"27":0,"30":0,"31":0,"34":0,"37":1,"38":0,"40":0,"46":1,"47":0,"49":0,"50":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"61":0,"64":0,"69":0,"72":0,"73":0,"76":0,"78":0,"79":0,"85":0,"90":1,"102":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-invalid-end.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-invalid-end.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":24,"column":2}},"5":{"start":{"line":7,"column":1},"end":{"line":7,"column":29}},"6":{"start":{"line":9,"column":1},"end":{"line":23,"column":4}},"7":{"start":{"line":14,"column":3},"end":{"line":21,"column":4}},"8":{"start":{"line":17,"column":4},"end":{"line":20,"column":7}},"9":{"start":{"line":26,"column":0},"end":{"line":29,"column":2}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":3},"end":{"line":14,"column":3}},{"start":{"line":14,"column":3},"end":{"line":14,"column":3}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":7},"end":{"line":14,"column":35}},{"start":{"line":15,"column":5},"end":{"line":15,"column":31}},{"start":{"line":16,"column":5},"end":{"line":16,"column":40}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tMemberExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isInTestNode","\t\t])(node => {","\t\t\tif (node.property.name === 'end' &&","\t\t\t\t\t!ava.hasTestModifier('cb') &&","\t\t\t\t\tutil.nameOfRootObject(node) === 't') {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: '`t.end()` should only be used inside of `test.cb()`.'","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"4":1,"6":1,"7":0,"9":0,"14":0,"17":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-nested-tests.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-nested-tests.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":30,"column":2}},"4":{"start":{"line":6,"column":1},"end":{"line":6,"column":29}},"5":{"start":{"line":7,"column":1},"end":{"line":7,"column":21}},"6":{"start":{"line":9,"column":1},"end":{"line":29,"column":4}},"7":{"start":{"line":14,"column":3},"end":{"line":14,"column":17}},"8":{"start":{"line":15,"column":3},"end":{"line":20,"column":4}},"9":{"start":{"line":16,"column":4},"end":{"line":19,"column":7}},"10":{"start":{"line":27,"column":3},"end":{"line":27,"column":17}},"11":{"start":{"line":32,"column":0},"end":{"line":35,"column":2}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":3},"end":{"line":15,"column":3}},{"start":{"line":15,"column":3},"end":{"line":15,"column":3}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","\tlet nestedCount = 0;","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\tnestedCount++;","\t\t\tif (nestedCount >= 2) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: 'Tests should not be nested'","\t\t\t\t});","\t\t\t}","\t\t}),","","\t\t'CallExpression:exit': visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(() => {","\t\t\tnestedCount--;","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"5":1,"6":0,"7":0,"9":0,"14":0,"15":0,"16":0,"27":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-only-test.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-only-test.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":21,"column":2}},"4":{"start":{"line":6,"column":1},"end":{"line":6,"column":29}},"5":{"start":{"line":8,"column":1},"end":{"line":20,"column":4}},"6":{"start":{"line":13,"column":3},"end":{"line":18,"column":4}},"7":{"start":{"line":14,"column":4},"end":{"line":17,"column":7}},"8":{"start":{"line":23,"column":0},"end":{"line":26,"column":2}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":3},"end":{"line":13,"column":3}},{"start":{"line":13,"column":3},"end":{"line":13,"column":3}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\tif (ava.hasTestModifier('only')) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: '`test.only()` should not be used.'","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"5":1,"6":0,"8":0,"13":0,"14":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-skip-assert.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-skip-assert.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":23,"column":2}},"5":{"start":{"line":7,"column":1},"end":{"line":7,"column":29}},"6":{"start":{"line":9,"column":1},"end":{"line":22,"column":4}},"7":{"start":{"line":14,"column":3},"end":{"line":20,"column":4}},"8":{"start":{"line":16,"column":4},"end":{"line":19,"column":7}},"9":{"start":{"line":25,"column":0},"end":{"line":28,"column":2}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":3},"end":{"line":14,"column":3}},{"start":{"line":14,"column":3},"end":{"line":14,"column":3}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":7},"end":{"line":14,"column":36}},{"start":{"line":15,"column":5},"end":{"line":15,"column":40}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tMemberExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isInTestNode","\t\t])(node => {","\t\t\tif (node.property.name === 'skip' &&","\t\t\t\t\tutil.nameOfRootObject(node) === 't') {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: 'No assertions should be skipped.'","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"4":1,"6":1,"7":0,"9":0,"14":0,"16":0,"25":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-skip-test.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-skip-test.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":21,"column":2}},"4":{"start":{"line":6,"column":1},"end":{"line":6,"column":29}},"5":{"start":{"line":8,"column":1},"end":{"line":20,"column":4}},"6":{"start":{"line":13,"column":3},"end":{"line":18,"column":4}},"7":{"start":{"line":14,"column":4},"end":{"line":17,"column":7}},"8":{"start":{"line":23,"column":0},"end":{"line":26,"column":2}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":3},"end":{"line":13,"column":3}},{"start":{"line":13,"column":3},"end":{"line":13,"column":3}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\tif (ava.hasTestModifier('skip')) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: 'No tests should be skipped.'","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"5":1,"6":0,"8":0,"13":0,"14":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-statement-after-end.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-statement-after-end.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"b":{"1":[0,0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"segmentStart","line":22,"loc":{"start":{"line":22,"column":1},"end":{"line":22,"column":32}}},"2":{"name":"segmentEnd","line":34,"loc":{"start":{"line":34,"column":1},"end":{"line":34,"column":23}}},"3":{"name":"checkForEndExpression","line":38,"loc":{"start":{"line":38,"column":1},"end":{"line":38,"column":38}}},"4":{"name":"checkStatement","line":44,"loc":{"start":{"line":44,"column":1},"end":{"line":44,"column":31}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":8,"column":0},"end":{"line":14,"column":37}},"3":{"start":{"line":9,"column":1},"end":{"line":14,"column":36}},"4":{"start":{"line":16,"column":0},"end":{"line":90,"column":2}},"5":{"start":{"line":17,"column":1},"end":{"line":17,"column":29}},"6":{"start":{"line":18,"column":1},"end":{"line":18,"column":44}},"7":{"start":{"line":19,"column":1},"end":{"line":19,"column":29}},"8":{"start":{"line":20,"column":1},"end":{"line":20,"column":31}},"9":{"start":{"line":22,"column":1},"end":{"line":32,"column":2}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":44}},"11":{"start":{"line":26,"column":2},"end":{"line":29,"column":4}},"12":{"start":{"line":28,"column":49},"end":{"line":28,"column":79}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":50}},"14":{"start":{"line":34,"column":1},"end":{"line":36,"column":2}},"15":{"start":{"line":35,"column":2},"end":{"line":35,"column":46}},"16":{"start":{"line":38,"column":1},"end":{"line":42,"column":2}},"17":{"start":{"line":39,"column":2},"end":{"line":41,"column":3}},"18":{"start":{"line":40,"column":3},"end":{"line":40,"column":35}},"19":{"start":{"line":44,"column":1},"end":{"line":65,"column":2}},"20":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"21":{"start":{"line":46,"column":3},"end":{"line":46,"column":10}},"22":{"start":{"line":49,"column":2},"end":{"line":51,"column":31}},"23":{"start":{"line":51,"column":19},"end":{"line":51,"column":29}},"24":{"start":{"line":54,"column":2},"end":{"line":64,"column":3}},"25":{"start":{"line":55,"column":3},"end":{"line":58,"column":6}},"26":{"start":{"line":57,"column":4},"end":{"line":57,"column":23}},"27":{"start":{"line":60,"column":3},"end":{"line":63,"column":6}},"28":{"start":{"line":67,"column":1},"end":{"line":89,"column":4}},"29":{"start":{"line":82,"column":3},"end":{"line":84,"column":4}},"30":{"start":{"line":83,"column":4},"end":{"line":83,"column":25}},"31":{"start":{"line":92,"column":0},"end":{"line":95,"column":2}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":1},"end":{"line":9,"column":31}},{"start":{"line":10,"column":1},"end":{"line":10,"column":40}},{"start":{"line":11,"column":1},"end":{"line":11,"column":41}},{"start":{"line":12,"column":1},"end":{"line":12,"column":32}},{"start":{"line":13,"column":1},"end":{"line":13,"column":43}},{"start":{"line":14,"column":1},"end":{"line":14,"column":36}}]},"2":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":2},"end":{"line":39,"column":2}},{"start":{"line":39,"column":2},"end":{"line":39,"column":2}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"5":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":3},"end":{"line":82,"column":3}},{"start":{"line":82,"column":3},"end":{"line":82,"column":3}}]}},"code":["'use strict';","const createAvaRule = require('../create-ava-rule');","","// This rule makes heavy use of eslints code path analysis","// See: http://eslint.org/docs/developer-guide/code-path-analysis.html","","// returns true if this node represents a call to `t.end(...)`","const isEndExpression = node =>","\tnode.type === 'CallExpression' &&","\tnode.callee.type === 'MemberExpression' &&","\tnode.callee.object.type === 'Identifier' &&","\tnode.callee.object.name === 't' &&","\tnode.callee.property.type === 'Identifier' &&","\tnode.callee.property.name === 'end';","","const create = context => {","\tconst ava = createAvaRule();","\tconst segmentInfoMap = Object.create(null);","\tconst segmentInfoStack = [];","\tlet currentSegmentInfo = null;","","\tfunction segmentStart(segment) {","\t\t// a new CodePathSegment has started, create an \"info\" object to track this segments state.","\t\tsegmentInfoStack.push(currentSegmentInfo);","","\t\tcurrentSegmentInfo = {","\t\t\tended: false,","\t\t\tprev: segment.prevSegments.map(prevSegment => segmentInfoMap[prevSegment.id])","\t\t};","","\t\tsegmentInfoMap[segment.id] = currentSegmentInfo;","\t}","","\tfunction segmentEnd() {","\t\tcurrentSegmentInfo = segmentInfoStack.pop();","\t}","","\tfunction checkForEndExpression(node) {","\t\tif (isEndExpression(node)) {","\t\t\tcurrentSegmentInfo.ended = true;","\t\t}","\t}","","\tfunction checkStatement(node) {","\t\tif (!ava.isInTestFile()) {","\t\t\treturn;","\t\t}","","\t\tconst ended = [currentSegmentInfo]","\t\t\t.concat(currentSegmentInfo.prev)","\t\t\t.filter(info => info.ended);","","\t\t// If this segment or any previous segment is already ended, further statements are not allowed, report as an error.","\t\tif (ended.length > 0) {","\t\t\tended.forEach(info => {","\t\t\t\t// unset ended state to avoid generating lots of errors","\t\t\t\tinfo.ended = false;","\t\t\t});","","\t\t\tcontext.report({","\t\t\t\tnode,","\t\t\t\tmessage: 'No statements following a call to `t.end()`.'","\t\t\t});","\t\t}","\t}","","\treturn ava.merge({","\t\tExpressionStatement: checkStatement,","\t\tWithStatement: checkStatement,","\t\tIfStatement: checkStatement,","\t\tSwitchStatement: checkStatement,","\t\tThrowStatement: checkStatement,","\t\tTryStatement: checkStatement,","\t\tWhileStatement: checkStatement,","\t\tDoWhileStatement: checkStatement,","\t\tForStatement: checkStatement,","\t\tForInStatement: checkStatement,","\t\tForOfStatement: checkStatement,","\t\tReturnStatement: node => {","\t\t\t// empty return statements are OK even after `t.end`,","\t\t\t// only check it if there is an argument","\t\t\tif (node.argument) {","\t\t\t\tcheckStatement(node);","\t\t\t}","\t\t},","\t\tonCodePathSegmentStart: segmentStart,","\t\tonCodePathSegmentEnd: segmentEnd,","\t\tCallExpression: checkForEndExpression","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"8":1,"9":0,"16":1,"17":0,"18":0,"19":0,"20":0,"22":1,"24":0,"26":0,"28":0,"31":0,"34":1,"35":0,"38":1,"39":0,"40":0,"44":1,"45":0,"46":0,"49":0,"51":0,"54":0,"55":0,"57":0,"60":0,"67":0,"82":0,"83":0,"92":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-todo-implementation.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-todo-implementation.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":22,"column":2}},"5":{"start":{"line":7,"column":1},"end":{"line":7,"column":29}},"6":{"start":{"line":9,"column":1},"end":{"line":21,"column":4}},"7":{"start":{"line":14,"column":3},"end":{"line":19,"column":4}},"8":{"start":{"line":15,"column":4},"end":{"line":18,"column":7}},"9":{"start":{"line":24,"column":0},"end":{"line":27,"column":2}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":3},"end":{"line":14,"column":3}},{"start":{"line":14,"column":3},"end":{"line":14,"column":3}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":7},"end":{"line":14,"column":34}},{"start":{"line":14,"column":38},"end":{"line":14,"column":84}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\tif (ava.hasTestModifier('todo') && node.arguments.some(util.isFunctionExpression)) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: '`test.todo()` should not be passed an implementation function.'","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"4":1,"6":1,"7":0,"9":0,"14":0,"15":0,"24":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-todo-test.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-todo-test.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":21,"column":2}},"4":{"start":{"line":6,"column":1},"end":{"line":6,"column":29}},"5":{"start":{"line":8,"column":1},"end":{"line":20,"column":4}},"6":{"start":{"line":13,"column":3},"end":{"line":18,"column":4}},"7":{"start":{"line":14,"column":4},"end":{"line":17,"column":7}},"8":{"start":{"line":23,"column":0},"end":{"line":26,"column":2}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":3},"end":{"line":13,"column":3}},{"start":{"line":13,"column":3},"end":{"line":13,"column":3}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\tif (ava.hasTestModifier('todo')) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: '`test.todo()` should be not be used.'","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"5":1,"6":0,"8":0,"13":0,"14":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-unknown-modifiers.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/no-unknown-modifiers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":18,"column":2}},"5":{"start":{"line":20,"column":0},"end":{"line":21,"column":57}},"6":{"start":{"line":20,"column":33},"end":{"line":21,"column":56}},"7":{"start":{"line":21,"column":21},"end":{"line":21,"column":55}},"8":{"start":{"line":23,"column":0},"end":{"line":41,"column":2}},"9":{"start":{"line":24,"column":1},"end":{"line":24,"column":29}},"10":{"start":{"line":26,"column":1},"end":{"line":40,"column":4}},"11":{"start":{"line":31,"column":3},"end":{"line":31,"column":42}},"12":{"start":{"line":33,"column":3},"end":{"line":38,"column":4}},"13":{"start":{"line":34,"column":4},"end":{"line":37,"column":7}},"14":{"start":{"line":43,"column":0},"end":{"line":46,"column":2}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":3},"end":{"line":33,"column":3}},{"start":{"line":33,"column":3},"end":{"line":33,"column":3}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","const modifiers = [","\t'after',","\t'afterEach',","\t'always',","\t'before',","\t'beforeEach',","\t'cb',","\t'only',","\t'serial',","\t'skip',","\t'todo',","\t'failing'","];","","const unknownModifiers = node => util.getTestModifiers(node)","\t.filter(modifier => modifiers.indexOf(modifier) === -1);","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\tconst unknown = unknownModifiers(node);","","\t\t\tif (unknown.length !== 0) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: `Unknown test modifier \\`${unknown[0]}\\`.`","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"4":1,"6":1,"20":1,"21":0,"23":1,"24":0,"26":0,"31":0,"33":0,"34":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/prefer-async-await.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/prefer-async-await.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"containsThen","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":21,"column":1}},"4":{"start":{"line":6,"column":1},"end":{"line":11,"column":2}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":15}},"6":{"start":{"line":13,"column":1},"end":{"line":13,"column":28}},"7":{"start":{"line":14,"column":1},"end":{"line":18,"column":2}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":14}},"9":{"start":{"line":20,"column":1},"end":{"line":20,"column":36}},"10":{"start":{"line":23,"column":0},"end":{"line":48,"column":2}},"11":{"start":{"line":24,"column":1},"end":{"line":24,"column":29}},"12":{"start":{"line":26,"column":1},"end":{"line":42,"column":4}},"13":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"14":{"start":{"line":31,"column":3},"end":{"line":31,"column":10}},"15":{"start":{"line":34,"column":2},"end":{"line":34,"column":36}},"16":{"start":{"line":35,"column":2},"end":{"line":35,"column":93}},"17":{"start":{"line":35,"column":55},"end":{"line":35,"column":91}},"18":{"start":{"line":36,"column":2},"end":{"line":41,"column":3}},"19":{"start":{"line":37,"column":3},"end":{"line":40,"column":6}},"20":{"start":{"line":44,"column":1},"end":{"line":47,"column":4}},"21":{"start":{"line":50,"column":0},"end":{"line":53,"column":2}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},{"start":{"line":6,"column":1},"end":{"line":6,"column":1}}]},"2":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":5},"end":{"line":6,"column":10}},{"start":{"line":7,"column":2},"end":{"line":7,"column":32}},{"start":{"line":8,"column":2},"end":{"line":8,"column":41}}]},"3":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},{"start":{"line":14,"column":1},"end":{"line":14,"column":1}}]},"4":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":5},"end":{"line":14,"column":42}},{"start":{"line":15,"column":2},"end":{"line":15,"column":33}}]},"5":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"6":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"7":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":21}},{"start":{"line":36,"column":25},"end":{"line":36,"column":63}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const createAvaRule = require('../create-ava-rule');","","function containsThen(node) {","\tif (!node ||","\t\tnode.type !== 'CallExpression' ||","\t\tnode.callee.type !== 'MemberExpression'","\t) {","\t\treturn false;","\t}","","\tconst callee = node.callee;","\tif (callee.property.type === 'Identifier' &&","\t\tcallee.property.name === 'then'","\t) {","\t\treturn true;","\t}","","\treturn containsThen(callee.object);","}","","const create = context => {","\tconst ava = createAvaRule();","","\tconst check = visitIf([","\t\tava.isInTestFile,","\t\tava.isInTestNode","\t])(node => {","\t\tif (node.body.type !== 'BlockStatement') {","\t\t\treturn;","\t\t}","","\t\tconst statements = node.body.body;","\t\tconst returnStatement = statements.find(statement => statement.type === 'ReturnStatement');","\t\tif (returnStatement && containsThen(returnStatement.argument)) {","\t\t\tcontext.report({","\t\t\t\tnode,","\t\t\t\tmessage: 'Prefer using async/await instead of returning a Promise.'","\t\t\t});","\t\t}","\t});","","\treturn ava.merge({","\t\tArrowFunctionExpression: check,","\t\tFunctionExpression: check","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"5":1,"6":0,"10":0,"13":0,"14":0,"17":0,"20":0,"23":1,"24":0,"26":0,"30":0,"31":0,"34":0,"35":0,"36":0,"37":0,"44":0,"50":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/prefer-power-assert.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/prefer-power-assert.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":53}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"5":{"start":{"line":7,"column":0},"end":{"line":16,"column":2}},"6":{"start":{"line":18,"column":0},"end":{"line":29,"column":3}},"7":{"start":{"line":18,"column":42},"end":{"line":29,"column":1}},"8":{"start":{"line":31,"column":0},"end":{"line":50,"column":3}},"9":{"start":{"line":31,"column":49},"end":{"line":50,"column":1}},"10":{"start":{"line":52,"column":0},"end":{"line":54,"column":64}},"11":{"start":{"line":53,"column":1},"end":{"line":54,"column":63}},"12":{"start":{"line":56,"column":0},"end":{"line":78,"column":2}},"13":{"start":{"line":57,"column":1},"end":{"line":57,"column":29}},"14":{"start":{"line":59,"column":1},"end":{"line":77,"column":4}},"15":{"start":{"line":64,"column":3},"end":{"line":64,"column":40}},"16":{"start":{"line":66,"column":3},"end":{"line":75,"column":4}},"17":{"start":{"line":67,"column":4},"end":{"line":74,"column":7}},"18":{"start":{"line":68,"column":5},"end":{"line":73,"column":6}},"19":{"start":{"line":69,"column":6},"end":{"line":72,"column":9}},"20":{"start":{"line":80,"column":0},"end":{"line":83,"column":2}}},"branchMap":{"1":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":1},"end":{"line":53,"column":56}},{"start":{"line":54,"column":1},"end":{"line":54,"column":63}}]},"2":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":3},"end":{"line":66,"column":3}},{"start":{"line":66,"column":3},"end":{"line":66,"column":3}}]},"3":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":5},"end":{"line":68,"column":5}},{"start":{"line":68,"column":5},"end":{"line":68,"column":5}}]}},"code":["'use strict';","const espurify = require('espurify');","const visitIf = require('enhance-visitors').visitIf;","const deepStrictEqual = require('deep-strict-equal');","const createAvaRule = require('../create-ava-rule');","","const notAllowed = [","\t'truthy',","\t'falsy',","\t'false',","\t'is',","\t'not',","\t'regex',","\t'notRegex',","\t'ifError'","];","","const assertionCalleeAst = methodName => ({","\ttype: 'MemberExpression',","\tobject: {","\t\ttype: 'Identifier',","\t\tname: 't'","\t},","\tproperty: {","\t\ttype: 'Identifier',","\t\tname: methodName","\t},","\tcomputed: false","});","","const skippedAssertionCalleeAst = methodName => ({","\ttype: 'MemberExpression',","\tobject: {","\t\ttype: 'MemberExpression',","\t\tobject: {","\t\t\ttype: 'Identifier',","\t\t\tname: 't'","\t\t},","\t\tproperty: {","\t\t\ttype: 'Identifier',","\t\t\tname: 'skip'","\t\t},","\t\tcomputed: false","\t},","\tproperty: {","\t\ttype: 'Identifier',","\t\tname: methodName","\t},","\tcomputed: false","});","","const isCalleeMatched = (callee, methodName) =>","\tdeepStrictEqual(callee, assertionCalleeAst(methodName)) ||","\tdeepStrictEqual(callee, skippedAssertionCalleeAst(methodName));","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isInTestNode","\t\t])(node => {","\t\t\tconst callee = espurify(node.callee);","","\t\t\tif (callee.type === 'MemberExpression') {","\t\t\t\tnotAllowed.forEach(methodName => {","\t\t\t\t\tif (isCalleeMatched(callee, methodName)) {","\t\t\t\t\t\tcontext.report({","\t\t\t\t\t\t\tnode,","\t\t\t\t\t\t\tmessage: 'Only asserts with no power-assert alternative are allowed.'","\t\t\t\t\t\t});","\t\t\t\t\t}","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"4":1,"5":1,"7":1,"18":1,"31":1,"52":1,"53":0,"56":1,"57":0,"59":0,"64":0,"66":0,"67":0,"68":0,"69":0,"80":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/test-ended.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/test-ended.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":40,"column":2}},"4":{"start":{"line":6,"column":1},"end":{"line":6,"column":29}},"5":{"start":{"line":7,"column":1},"end":{"line":7,"column":23}},"6":{"start":{"line":9,"column":1},"end":{"line":39,"column":4}},"7":{"start":{"line":14,"column":3},"end":{"line":19,"column":4}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":21}},"9":{"start":{"line":25,"column":3},"end":{"line":27,"column":4}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":11}},"11":{"start":{"line":30,"column":3},"end":{"line":37,"column":4}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":22}},"13":{"start":{"line":33,"column":4},"end":{"line":36,"column":7}},"14":{"start":{"line":42,"column":0},"end":{"line":45,"column":2}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":3},"end":{"line":14,"column":3}},{"start":{"line":14,"column":3},"end":{"line":14,"column":3}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":7},"end":{"line":14,"column":32}},{"start":{"line":15,"column":4},"end":{"line":15,"column":28}},{"start":{"line":16,"column":4},"end":{"line":16,"column":32}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":3},"end":{"line":25,"column":3}},{"start":{"line":25,"column":3},"end":{"line":25,"column":3}}]},"4":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":3},"end":{"line":30,"column":3}},{"start":{"line":30,"column":3},"end":{"line":30,"column":3}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","\tlet endCalled = false;","","\treturn ava.merge({","\t\tMemberExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isInTestNode","\t\t])(node => {","\t\t\tif (ava.hasTestModifier('cb') &&","\t\t\t\tnode.object.name === 't' &&","\t\t\t\tnode.property.name === 'end'","\t\t\t) {","\t\t\t\tendCalled = true;","\t\t\t}","\t\t}),","\t\t'CallExpression:exit': visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\tif (!ava.hasTestModifier('cb')) {","\t\t\t\treturn;","\t\t\t}","","\t\t\t// leaving test function","\t\t\tif (endCalled) {","\t\t\t\tendCalled = false;","\t\t\t} else {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: 'Callback test was not ended. Make sure to explicitly end the test with `t.end()`.'","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"5":1,"6":0,"7":0,"9":0,"14":0,"18":0,"25":0,"26":0,"30":0,"31":0,"33":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/test-title.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/test-title.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":33,"column":2}},"4":{"start":{"line":6,"column":1},"end":{"line":6,"column":29}},"5":{"start":{"line":7,"column":1},"end":{"line":7,"column":52}},"6":{"start":{"line":8,"column":1},"end":{"line":8,"column":19}},"7":{"start":{"line":10,"column":1},"end":{"line":32,"column":4}},"8":{"start":{"line":16,"column":3},"end":{"line":16,"column":15}},"9":{"start":{"line":18,"column":3},"end":{"line":18,"column":62}},"10":{"start":{"line":19,"column":3},"end":{"line":19,"column":61}},"11":{"start":{"line":20,"column":3},"end":{"line":20,"column":56}},"12":{"start":{"line":22,"column":3},"end":{"line":27,"column":4}},"13":{"start":{"line":23,"column":4},"end":{"line":26,"column":7}},"14":{"start":{"line":30,"column":3},"end":{"line":30,"column":17}},"15":{"start":{"line":35,"column":0},"end":{"line":40,"column":3}},"16":{"start":{"line":42,"column":0},"end":{"line":47,"column":2}}},"branchMap":{"1":{"line":18,"type":"cond-expr","locations":[{"start":{"line":18,"column":56},"end":{"line":18,"column":57}},{"start":{"line":18,"column":60},"end":{"line":18,"column":61}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":27},"end":{"line":20,"column":38}},{"start":{"line":20,"column":42},"end":{"line":20,"column":55}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":3},"end":{"line":22,"column":3}},{"start":{"line":22,"column":3},"end":{"line":22,"column":3}}]},"4":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":7},"end":{"line":22,"column":17}},{"start":{"line":22,"column":21},"end":{"line":22,"column":36}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","\tconst ifMultiple = context.options[0] !== 'always';","\tlet testCount = 0;","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode,","\t\t\tava.hasNoHookModifier","\t\t])(node => {","\t\t\ttestCount++;","","\t\t\tconst requiredLength = ava.hasTestModifier('todo') ? 1 : 2;","\t\t\tconst hasNoTitle = node.arguments.length < requiredLength;","\t\t\tconst isOverThreshold = !ifMultiple || testCount > 1;","","\t\t\tif (hasNoTitle && isOverThreshold) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: 'Test should have a title.'","\t\t\t\t});","\t\t\t}","\t\t}),","\t\t'Program:exit': () => {","\t\t\ttestCount = 0;","\t\t}","\t});","};","","const schema = [{","\tenum: [","\t\t'always',","\t\t'if-multiple'","\t]","}];","","module.exports = {","\tcreate,","\tmeta: {","\t\tschema","\t}","};",""],"l":{"2":1,"3":1,"5":1,"6":0,"7":0,"8":0,"10":0,"16":0,"18":0,"19":0,"20":0,"22":0,"23":0,"30":0,"35":1,"42":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/use-t-well.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/use-t-well.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":57}},"5":{"start":{"line":6,"column":25},"end":{"line":6,"column":56}},"6":{"start":{"line":8,"column":0},"end":{"line":10,"column":29}},"7":{"start":{"line":9,"column":1},"end":{"line":10,"column":28}},"8":{"start":{"line":12,"column":0},"end":{"line":30,"column":2}},"9":{"start":{"line":13,"column":1},"end":{"line":17,"column":3}},"10":{"start":{"line":19,"column":1},"end":{"line":29,"column":13}},"11":{"start":{"line":20,"column":2},"end":{"line":26,"column":3}},"12":{"start":{"line":21,"column":3},"end":{"line":21,"column":25}},"13":{"start":{"line":22,"column":9},"end":{"line":26,"column":3}},"14":{"start":{"line":23,"column":3},"end":{"line":23,"column":27}},"15":{"start":{"line":25,"column":3},"end":{"line":25,"column":26}},"16":{"start":{"line":28,"column":2},"end":{"line":28,"column":13}},"17":{"start":{"line":32,"column":0},"end":{"line":103,"column":2}},"18":{"start":{"line":33,"column":1},"end":{"line":33,"column":29}},"19":{"start":{"line":35,"column":1},"end":{"line":102,"column":4}},"20":{"start":{"line":40,"column":3},"end":{"line":46,"column":4}},"21":{"start":{"line":42,"column":4},"end":{"line":45,"column":7}},"22":{"start":{"line":52,"column":3},"end":{"line":55,"column":4}},"23":{"start":{"line":54,"column":4},"end":{"line":54,"column":11}},"24":{"start":{"line":57,"column":3},"end":{"line":57,"column":41}},"25":{"start":{"line":58,"column":3},"end":{"line":58,"column":41}},"26":{"start":{"line":60,"column":3},"end":{"line":71,"column":4}},"27":{"start":{"line":62,"column":4},"end":{"line":68,"column":5}},"28":{"start":{"line":64,"column":5},"end":{"line":67,"column":8}},"29":{"start":{"line":70,"column":4},"end":{"line":70,"column":11}},"30":{"start":{"line":73,"column":3},"end":{"line":100,"column":4}},"31":{"start":{"line":74,"column":4},"end":{"line":94,"column":5}},"32":{"start":{"line":75,"column":5},"end":{"line":78,"column":8}},"33":{"start":{"line":79,"column":11},"end":{"line":94,"column":5}},"34":{"start":{"line":80,"column":5},"end":{"line":83,"column":8}},"35":{"start":{"line":84,"column":11},"end":{"line":94,"column":5}},"36":{"start":{"line":85,"column":5},"end":{"line":88,"column":8}},"37":{"start":{"line":89,"column":11},"end":{"line":94,"column":5}},"38":{"start":{"line":90,"column":5},"end":{"line":93,"column":8}},"39":{"start":{"line":95,"column":10},"end":{"line":100,"column":4}},"40":{"start":{"line":96,"column":4},"end":{"line":99,"column":7}},"41":{"start":{"line":105,"column":0},"end":{"line":108,"column":2}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":1},"end":{"line":9,"column":38}},{"start":{"line":10,"column":1},"end":{"line":10,"column":28}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":9},"end":{"line":22,"column":9}},{"start":{"line":22,"column":9},"end":{"line":22,"column":9}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":3},"end":{"line":40,"column":3}},{"start":{"line":40,"column":3},"end":{"line":40,"column":3}}]},"5":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":7},"end":{"line":40,"column":46}},{"start":{"line":41,"column":5},"end":{"line":41,"column":29}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":3},"end":{"line":52,"column":3}},{"start":{"line":52,"column":3},"end":{"line":52,"column":3}}]},"7":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":7},"end":{"line":52,"column":46}},{"start":{"line":53,"column":5},"end":{"line":53,"column":40}}]},"8":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":3},"end":{"line":60,"column":3}},{"start":{"line":60,"column":3},"end":{"line":60,"column":3}}]},"9":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"10":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":28}},{"start":{"line":62,"column":32},"end":{"line":62,"column":54}}]},"11":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":3},"end":{"line":73,"column":3}},{"start":{"line":73,"column":3},"end":{"line":73,"column":3}}]},"12":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"13":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":11},"end":{"line":79,"column":11}},{"start":{"line":79,"column":11},"end":{"line":79,"column":11}}]},"14":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":11},"end":{"line":84,"column":11}},{"start":{"line":84,"column":11},"end":{"line":84,"column":11}}]},"15":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":11},"end":{"line":89,"column":11}},{"start":{"line":89,"column":11},"end":{"line":89,"column":11}}]},"16":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":10},"end":{"line":95,"column":10}},{"start":{"line":95,"column":10},"end":{"line":95,"column":10}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","const isMethod = name => util.executionMethods.has(name);","","const isCallExpression = node =>","\tnode.parent.type === 'CallExpression' &&","\tnode.parent.callee === node;","","const getMemberStats = members => {","\tconst initial = {","\t\tskip: [],","\t\tmethod: [],","\t\tother: []","\t};","","\treturn members.reduce((res, member) => {","\t\tif (member === 'skip') {","\t\t\tres.skip.push(member);","\t\t} else if (isMethod(member)) {","\t\t\tres.method.push(member);","\t\t} else {","\t\t\tres.other.push(member);","\t\t}","","\t\treturn res;","\t}, initial);","};","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isInTestNode","\t\t])(node => {","\t\t\tif (node.callee.type !== 'MemberExpression' &&","\t\t\t\t\tnode.callee.name === 't') {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: '`t` is not a function.'","\t\t\t\t});","\t\t\t}","\t\t}),","\t\tMemberExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isInTestNode","\t\t])(node => {","\t\t\tif (node.parent.type === 'MemberExpression' ||","\t\t\t\t\tutil.nameOfRootObject(node) !== 't') {","\t\t\t\treturn;","\t\t\t}","","\t\t\tconst members = util.getMembers(node);","\t\t\tconst stats = getMemberStats(members);","","\t\t\tif (members[0] === 'context') {","\t\t\t\t// anything is fine when of the form `t.context...`","\t\t\t\tif (members.length === 1 && isCallExpression(node)) {","\t\t\t\t\t// except `t.context()`","\t\t\t\t\tcontext.report({","\t\t\t\t\t\tnode,","\t\t\t\t\t\tmessage: 'Unknown assertion method `context`.'","\t\t\t\t\t});","\t\t\t\t}","","\t\t\t\treturn;","\t\t\t}","","\t\t\tif (isCallExpression(node)) {","\t\t\t\tif (stats.other.length > 0) {","\t\t\t\t\tcontext.report({","\t\t\t\t\t\tnode,","\t\t\t\t\t\tmessage: `Unknown assertion method \\`${stats.other[0]}\\`.`","\t\t\t\t\t});","\t\t\t\t} else if (stats.skip.length > 1) {","\t\t\t\t\tcontext.report({","\t\t\t\t\t\tnode,","\t\t\t\t\t\tmessage: 'Too many chained uses of `skip`.'","\t\t\t\t\t});","\t\t\t\t} else if (stats.method.length > 1) {","\t\t\t\t\tcontext.report({","\t\t\t\t\t\tnode,","\t\t\t\t\t\tmessage: 'Can\\'t chain assertion methods.'","\t\t\t\t\t});","\t\t\t\t} else if (stats.method.length === 0) {","\t\t\t\t\tcontext.report({","\t\t\t\t\t\tnode,","\t\t\t\t\t\tmessage: 'Missing assertion method.'","\t\t\t\t\t});","\t\t\t\t}","\t\t\t} else if (stats.other.length > 0) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: `Unknown member \\`${stats.other[0]}\\`. Use \\`context.${stats.other[0]}\\` instead.`","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"4":1,"6":1,"8":1,"9":0,"12":1,"13":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"28":0,"32":1,"33":0,"35":0,"40":0,"42":0,"52":0,"54":0,"57":0,"58":0,"60":0,"62":0,"64":0,"70":0,"73":0,"74":0,"75":0,"79":0,"80":0,"84":0,"85":0,"89":0,"90":0,"95":0,"96":0,"105":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/use-t.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/use-t.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":32,"column":2}},"4":{"start":{"line":6,"column":1},"end":{"line":6,"column":29}},"5":{"start":{"line":8,"column":1},"end":{"line":31,"column":4}},"6":{"start":{"line":13,"column":3},"end":{"line":13,"column":65}},"7":{"start":{"line":15,"column":3},"end":{"line":17,"column":4}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":11}},"9":{"start":{"line":19,"column":3},"end":{"line":29,"column":4}},"10":{"start":{"line":20,"column":4},"end":{"line":23,"column":7}},"11":{"start":{"line":24,"column":10},"end":{"line":29,"column":4}},"12":{"start":{"line":25,"column":4},"end":{"line":28,"column":7}},"13":{"start":{"line":34,"column":0},"end":{"line":37,"column":2}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":3},"end":{"line":15,"column":3}},{"start":{"line":15,"column":3},"end":{"line":15,"column":3}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":9},"end":{"line":15,"column":20}},{"start":{"line":15,"column":24},"end":{"line":15,"column":42}},{"start":{"line":15,"column":46},"end":{"line":15,"column":75}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":3},"end":{"line":19,"column":3}},{"start":{"line":19,"column":3},"end":{"line":19,"column":3}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":10},"end":{"line":24,"column":10}},{"start":{"line":24,"column":10},"end":{"line":24,"column":10}}]}},"code":["'use strict';","const visitIf = require('enhance-visitors').visitIf;","const createAvaRule = require('../create-ava-rule');","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isTestNode","\t\t])(node => {","\t\t\tconst functionArg = node.arguments[node.arguments.length - 1];","","\t\t\tif (!(functionArg && functionArg.params && functionArg.params.length > 0)) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tif (functionArg.params.length > 1) {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: 'Test should only have one parameter named `t`.'","\t\t\t\t});","\t\t\t} else if (functionArg.params[0].name !== 't') {","\t\t\t\tcontext.report({","\t\t\t\t\tnode,","\t\t\t\t\tmessage: 'Test parameter should be named `t`.'","\t\t\t\t});","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"5":1,"6":0,"8":0,"13":0,"15":0,"16":0,"19":0,"20":0,"24":0,"25":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/use-test.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/use-test.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"report","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"3":{"start":{"line":5,"column":0},"end":{"line":17,"column":2}},"4":{"start":{"line":19,"column":0},"end":{"line":24,"column":1}},"5":{"start":{"line":20,"column":1},"end":{"line":23,"column":4}},"6":{"start":{"line":26,"column":0},"end":{"line":37,"column":3}},"7":{"start":{"line":26,"column":27},"end":{"line":37,"column":1}},"8":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"9":{"start":{"line":29,"column":3},"end":{"line":29,"column":25}},"10":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"11":{"start":{"line":34,"column":3},"end":{"line":34,"column":25}},"12":{"start":{"line":39,"column":0},"end":{"line":42,"column":2}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":33}},{"start":{"line":28,"column":37},"end":{"line":28,"column":77}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"4":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":6},"end":{"line":33,"column":29}},{"start":{"line":33,"column":33},"end":{"line":33,"column":42}},{"start":{"line":33,"column":46},"end":{"line":33,"column":112}}]}},"code":["'use strict';","const espurify = require('espurify');","const deepStrictEqual = require('deep-strict-equal');","","const avaVariableDeclaratorInitAst = {","\ttype: 'CallExpression',","\tcallee: {","\t\ttype: 'Identifier',","\t\tname: 'require'","\t},","\targuments: [","\t\t{","\t\t\ttype: 'Literal',","\t\t\tvalue: 'ava'","\t\t}","\t]","};","","function report(context, node) {","\tcontext.report({","\t\tnode,","\t\tmessage: 'AVA should be imported as `test`.'","\t});","}","","const create = context => ({","\tImportDeclaration: node => {","\t\tif (node.source.value === 'ava' && node.specifiers[0].local.name !== 'test') {","\t\t\treport(context, node);","\t\t}","\t},","\tVariableDeclarator: node => {","\t\tif (node.id.name !== 'test' && node.init && deepStrictEqual(espurify(node.init), avaVariableDeclaratorInitAst)) {","\t\t\treport(context, node);","\t\t}","\t}","});","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"5":1,"19":1,"20":0,"26":1,"28":0,"29":0,"33":0,"34":0,"39":1}},"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/use-true-false.js":{"path":"/home/travis/build/npmtest/node-npmtest-eslint-plugin-ava/node_modules/eslint-plugin-ava/rules/use-true-false.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":16,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0],"5":[0,0,0,0,0,0,0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"matchesKnownBooleanExpression","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":44}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":53}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"7":{"start":{"line":9,"column":0},"end":{"line":18,"column":2}},"8":{"start":{"line":20,"column":0},"end":{"line":37,"column":80}},"9":{"start":{"line":37,"column":19},"end":{"line":37,"column":78}},"10":{"start":{"line":39,"column":0},"end":{"line":47,"column":1}},"11":{"start":{"line":40,"column":1},"end":{"line":42,"column":2}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":15}},"13":{"start":{"line":44,"column":1},"end":{"line":44,"column":37}},"14":{"start":{"line":46,"column":1},"end":{"line":46,"column":85}},"15":{"start":{"line":46,"column":49},"end":{"line":46,"column":83}},"16":{"start":{"line":49,"column":0},"end":{"line":85,"column":2}},"17":{"start":{"line":50,"column":1},"end":{"line":50,"column":29}},"18":{"start":{"line":52,"column":1},"end":{"line":84,"column":4}},"19":{"start":{"line":57,"column":3},"end":{"line":82,"column":4}},"20":{"start":{"line":62,"column":4},"end":{"line":62,"column":34}},"21":{"start":{"line":64,"column":4},"end":{"line":81,"column":5}},"22":{"start":{"line":70,"column":5},"end":{"line":80,"column":6}},"23":{"start":{"line":71,"column":6},"end":{"line":74,"column":9}},"24":{"start":{"line":76,"column":6},"end":{"line":79,"column":9}},"25":{"start":{"line":87,"column":0},"end":{"line":90,"column":2}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},{"start":{"line":40,"column":1},"end":{"line":40,"column":1}}]},"2":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":3},"end":{"line":57,"column":3}},{"start":{"line":57,"column":3},"end":{"line":57,"column":3}}]},"3":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":43}},{"start":{"line":59,"column":5},"end":{"line":59,"column":43}},{"start":{"line":59,"column":47},"end":{"line":59,"column":84}},{"start":{"line":60,"column":4},"end":{"line":60,"column":46}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"5":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":11}},{"start":{"line":65,"column":7},"end":{"line":65,"column":38}},{"start":{"line":65,"column":42},"end":{"line":65,"column":93}},{"start":{"line":66,"column":6},"end":{"line":66,"column":36}},{"start":{"line":66,"column":40},"end":{"line":66,"column":60}},{"start":{"line":67,"column":6},"end":{"line":67,"column":28}},{"start":{"line":67,"column":32},"end":{"line":67,"column":64}},{"start":{"line":68,"column":6},"end":{"line":68,"column":40}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":5},"end":{"line":70,"column":5}},{"start":{"line":70,"column":5},"end":{"line":70,"column":5}}]}},"code":["'use strict';","const espree = require('espree');","const espurify = require('espurify');","const visitIf = require('enhance-visitors').visitIf;","const deepStrictEqual = require('deep-strict-equal');","const util = require('../util');","const createAvaRule = require('../create-ava-rule');","","const booleanBinaryOperators = [","\t'==',","\t'===',","\t'!=',","\t'!==',","\t'<',","\t'<=',","\t'>',","\t'>='","];","","const knownBooleanSignatures = [","\t'isFinite()',","\t'isNaN()',","\t'Object.is()',","\t'Object.isExtensible()',","\t'Object.isFrozen()',","\t'Object.isSealed()',","\t'Boolean()',","\t'Number.isNaN()',","\t'Number.isFinite()',","\t'Number.isInteger()',","\t'Number.isSafeInteger()',","\t'Array.isArray()',","\t'ArrayBuffer.isView()',","\t'SharedArrayBuffer.isView()',","\t'Reflect.has()',","\t'Reflect.isExtensible()'","].map(signature => espurify(espree.parse(signature).body[0].expression.callee));","","function matchesKnownBooleanExpression(arg) {","\tif (arg.type !== 'CallExpression') {","\t\treturn false;","\t}","","\tconst callee = espurify(arg.callee);","","\treturn knownBooleanSignatures.some(signature => deepStrictEqual(callee, signature));","}","","const create = context => {","\tconst ava = createAvaRule();","","\treturn ava.merge({","\t\tCallExpression: visitIf([","\t\t\tava.isInTestFile,","\t\t\tava.isInTestNode","\t\t])(node => {","\t\t\tif (","\t\t\t\tnode.callee.type === 'MemberExpression' &&","\t\t\t\t(node.callee.property.name === 'truthy' || node.callee.property.name === 'falsy') &&","\t\t\t\tutil.nameOfRootObject(node.callee) === 't'","\t\t\t) {","\t\t\t\tconst arg = node.arguments[0];","","\t\t\t\tif (arg &&","\t\t\t\t\t((arg.type === 'BinaryExpression' && booleanBinaryOperators.indexOf(arg.operator) !== -1) ||","\t\t\t\t\t(arg.type === 'UnaryExpression' && arg.operator === '!') ||","\t\t\t\t\t(arg.type === 'Literal' && arg.value === Boolean(arg.value)) ||","\t\t\t\t\t(matchesKnownBooleanExpression(arg)))","\t\t\t\t) {","\t\t\t\t\tif (node.callee.property.name === 'falsy') {","\t\t\t\t\t\tcontext.report({","\t\t\t\t\t\t\tnode,","\t\t\t\t\t\t\tmessage: '`t.false()` should be used instead of `t.falsy()`.'","\t\t\t\t\t\t});","\t\t\t\t\t} else {","\t\t\t\t\t\tcontext.report({","\t\t\t\t\t\t\tnode,","\t\t\t\t\t\t\tmessage: '`t.true()` should be used instead of `t.truthy()`.'","\t\t\t\t\t\t});","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t})","\t});","};","","module.exports = {","\tcreate,","\tmeta: {}","};",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"20":1,"37":16,"39":1,"40":0,"41":0,"44":0,"46":0,"49":1,"50":0,"52":0,"57":0,"62":0,"64":0,"70":0,"71":0,"76":0,"87":1}}}